---
// AI Image Generator Demo
---

<section class="py-20 bg-gradient-to-br from-green via-yellow-200 to-green">
  <div class="container mx-auto px-6">
    <div class="text-center mb-12">
      <h2 class="text-4xl md:text-5xl font-bold mb-4 text-black">
        âœ¨ AI-Powered <span class="bg-black text-white px-3 py-1 rounded-lg">Visual Creation</span>
      </h2>
      <p class="text-xl text-gray-700 max-w-2xl mx-auto">
        Watch our AI create stunning marketing visuals in real-time. Just describe what you need!
      </p>
    </div>

    <div class="max-w-4xl mx-auto">
      <div class="bg-white rounded-2xl shadow-2xl overflow-hidden">
        <!-- Generator Interface -->
        <div class="p-8">
          <div class="flex flex-col md:flex-row gap-8">
            <!-- Input Section -->
            <div class="flex-1">
              <h3 class="text-2xl font-bold mb-4 text-black">Describe Your Vision</h3>
              <div class="space-y-4">
                <textarea
                  id="image-prompt"
                  placeholder="e.g., A modern digital marketing team collaborating in a sleek office with holographic data visualizations..."
                  class="w-full h-32 p-4 border-2 border-gray-200 rounded-xl focus:border-green focus:outline-none resize-none"
                ></textarea>
                
                <div class="flex flex-wrap gap-2">
                  <button class="prompt-suggestion bg-gray-100 hover:bg-green text-black px-3 py-1 rounded-lg text-sm transition-colors" data-prompt="Modern tech startup office with diverse team">
                    Tech Startup
                  </button>
                  <button class="prompt-suggestion bg-gray-100 hover:bg-green text-black px-3 py-1 rounded-lg text-sm transition-colors" data-prompt="Futuristic digital marketing dashboard with AI analytics">
                    AI Dashboard
                  </button>
                  <button class="prompt-suggestion bg-gray-100 hover:bg-green text-black px-3 py-1 rounded-lg text-sm transition-colors" data-prompt="Creative agency brainstorming session with colorful mood boards">
                    Creative Agency
                  </button>
                  <button class="prompt-suggestion bg-gray-100 hover:bg-green text-black px-3 py-1 rounded-lg text-sm transition-colors" data-prompt="Social media content creation studio with ring lights and cameras">
                    Content Studio
                  </button>
                </div>

                <button
                  id="generate-btn"
                  class="w-full bg-black text-white py-4 rounded-xl hover:bg-green hover:text-black font-medium transition-all duration-300 transform hover:scale-105"
                >
                  ðŸŽ¨ Generate AI Visual
                </button>
              </div>
            </div>

            <!-- Preview Section -->
            <div class="flex-1">
              <h3 class="text-2xl font-bold mb-4 text-black">AI Creation</h3>
              <div id="image-preview" class="relative">
                <!-- Default State -->
                <div id="default-state" class="bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl h-64 flex items-center justify-center">
                  <div class="text-center text-gray-500">
                    <svg class="w-16 h-16 mx-auto mb-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                    </svg>
                    <p>Your AI-generated visual will appear here</p>
                  </div>
                </div>

                <!-- Loading State -->
                <div id="loading-state" class="hidden bg-gradient-to-br from-green to-yellow-200 rounded-xl h-64 flex items-center justify-center">
                  <div class="text-center text-black">
                    <div class="animate-spin w-12 h-12 border-4 border-black border-t-transparent rounded-full mx-auto mb-4"></div>
                    <p class="font-medium">AI is creating your visual...</p>
                    <p class="text-sm opacity-70 mt-2">This usually takes 5-10 seconds</p>
                  </div>
                </div>

                <!-- Result State -->
                <div id="result-state" class="hidden">
                  <div class="bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl h-64 p-6 text-white relative overflow-hidden">
                    <div class="absolute inset-0 bg-black bg-opacity-20 rounded-xl"></div>
                    <div class="relative z-10">
                      <h4 class="font-bold text-xl mb-2">AI-Generated Concept</h4>
                      <p id="ai-description" class="text-sm leading-relaxed opacity-90">
                        <!-- AI description will be inserted here -->
                      </p>
                    </div>
                    <div class="absolute bottom-4 right-4 bg-white bg-opacity-20 rounded-lg px-3 py-1">
                      <span class="text-xs font-medium">âœ¨ AI Enhanced</span>
                    </div>
                  </div>
                  
                  <div class="mt-4 flex gap-2">
                    <button class="flex-1 bg-green text-black py-2 rounded-lg hover:bg-black hover:text-white transition-colors">
                      ðŸ’¾ Save Concept
                    </button>
                    <button id="regenerate-btn" class="flex-1 bg-gray-200 text-black py-2 rounded-lg hover:bg-gray-300 transition-colors">
                      ðŸ”„ Regenerate
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Stats Bar -->
        <div class="bg-gray-50 px-8 py-4 border-t">
          <div class="flex justify-center space-x-8 text-sm">
            <div class="text-center">
              <div class="font-bold text-green text-2xl">50K+</div>
              <div class="text-gray-600">Visuals Generated</div>
            </div>
            <div class="text-center">
              <div class="font-bold text-green text-2xl">98%</div>
              <div class="text-gray-600">Client Satisfaction</div>
            </div>
            <div class="text-center">
              <div class="font-bold text-green text-2xl">5s</div>
              <div class="text-gray-600">Average Generation</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { geminiAI } from '../../lib/gemini.ts';

  const imagePrompt = document.getElementById('image-prompt') as HTMLTextAreaElement;
  const generateBtn = document.getElementById('generate-btn');
  const regenerateBtn = document.getElementById('regenerate-btn');
  const defaultState = document.getElementById('default-state');
  const loadingState = document.getElementById('loading-state');
  const resultState = document.getElementById('result-state');
  const aiDescription = document.getElementById('ai-description');
  const promptSuggestions = document.querySelectorAll('.prompt-suggestion');

  // Handle prompt suggestions
  promptSuggestions.forEach(button => {
    button.addEventListener('click', () => {
      const prompt = button.getAttribute('data-prompt');
      if (prompt && imagePrompt) {
        imagePrompt.value = prompt;
      }
    });
  });

  async function generateImage() {
    const prompt = imagePrompt?.value.trim();
    if (!prompt) {
      imagePrompt?.focus();
      return;
    }

    // Show loading state
    defaultState?.classList.add('hidden');
    resultState?.classList.add('hidden');
    loadingState?.classList.remove('hidden');
    
    (generateBtn as HTMLButtonElement).disabled = true;
    generateBtn!.textContent = 'ðŸŽ¨ Creating...';

    try {
      const description = await geminiAI.generateImage(prompt);
      
      // Show result
      if (aiDescription) {
        aiDescription.textContent = description;
      }
      
      loadingState?.classList.add('hidden');
      resultState?.classList.remove('hidden');
    } catch (error) {
      console.error('Generation error:', error);
      loadingState?.classList.add('hidden');
      defaultState?.classList.remove('hidden');
      alert('Sorry, there was an error generating your image. Please try again!');
    } finally {
      (generateBtn as HTMLButtonElement).disabled = false;
      generateBtn!.textContent = 'ðŸŽ¨ Generate AI Visual';
    }
  }


  generateBtn?.addEventListener('click', generateImage);
  regenerateBtn?.addEventListener('click', generateImage);

  // Handle Enter key in textarea
  imagePrompt?.addEventListener('keydown', (e) => {
    if (e.key === 'Enter' && e.ctrlKey) {
      generateImage();
    }
  });
</script>