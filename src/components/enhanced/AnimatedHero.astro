---
// Enhanced Hero Section with Animations
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-white via-gray-50 to-green">
  <!-- Animated Background Elements -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="floating-shape absolute top-20 left-10 w-64 h-64 bg-green opacity-20 rounded-full blur-3xl animate-float"></div>
    <div class="floating-shape absolute bottom-20 right-10 w-48 h-48 bg-yellow-300 opacity-30 rounded-full blur-2xl animate-float-delayed"></div>
    <div class="floating-shape absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-purple-300 opacity-10 rounded-full blur-3xl animate-pulse"></div>
  </div>

  <!-- Grid Pattern -->
  <div class="absolute inset-0 opacity-5">
    <div class="grid-pattern"></div>
  </div>

  <div class="container mx-auto px-6 relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content Side -->
      <div class="text-center lg:text-left">
        <!-- Animated Badge -->
        <div class="inline-flex items-center space-x-2 bg-black text-white px-4 py-2 rounded-full mb-6 animate-fade-in-up">
          <div class="w-2 h-2 bg-green rounded-full animate-pulse"></div>
          <span class="text-sm font-medium">AI-Powered Digital Marketing</span>
        </div>

        <!-- Main Heading with Stagger Animation -->
        <h1 class="text-5xl md:text-7xl font-bold leading-tight mb-6 stagger-animation">
          <span class="block animate-fade-in-up" style="animation-delay: 0.2s;">Navigating the</span>
          <span class="block animate-fade-in-up text-stroke" style="animation-delay: 0.4s;">digital</span>
          <span class="block animate-fade-in-up bg-green text-black px-4 py-2 rounded-lg inline-block mt-2" style="animation-delay: 0.6s;">
            landscape
          </span>
          <span class="block animate-fade-in-up mt-2" style="animation-delay: 0.8s;">for success</span>
        </h1>

        <!-- Subtitle -->
        <p class="text-xl md:text-2xl text-gray-600 mb-8 max-w-xl animate-fade-in-up" style="animation-delay: 1s;">
          Our AI-powered digital marketing agency helps businesses thrive in the online world with data-driven strategies and cutting-edge technology.
        </p>

        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 animate-fade-in-up" style="animation-delay: 1.2s;">
          <button class="btn-primary group relative overflow-hidden">
            <span class="relative z-10">Book a Live AI Demo</span>
            <div class="absolute inset-0 bg-green transform translate-y-full group-hover:translate-y-0 transition-transform duration-300"></div>
          </button>
          <button class="btn-secondary group">
            <span>Watch Success Stories</span>
            <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </button>
        </div>

        <!-- Stats Row -->
        <div class="grid grid-cols-3 gap-6 mt-12 animate-fade-in-up" style="animation-delay: 1.4s;">
          <div class="text-center">
            <div class="text-3xl font-bold text-black counter" data-target="500">0</div>
            <div class="text-sm text-gray-600">AI Campaigns</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-black counter" data-target="98">0</div>
            <div class="text-sm text-gray-600">Success Rate %</div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-black counter" data-target="24">0</div>
            <div class="text-sm text-gray-600">Hour Response</div>
          </div>
        </div>
      </div>

      <!-- Visual Side -->
      <div class="relative animate-fade-in-left" style="animation-delay: 0.8s;">
        <!-- Main Illustration Container -->
        <div class="relative">
          <!-- Hero Image with Floating Cards -->
          <div class="relative z-10">
            <div class="bg-gradient-to-br from-green to-yellow-300 rounded-3xl p-8 shadow-2xl">
              <!-- AI Dashboard Mockup -->
              <div class="bg-white rounded-2xl p-6 shadow-lg">
                <div class="flex items-center justify-between mb-4">
                  <h3 class="font-bold text-lg">AI Analytics Dashboard</h3>
                  <div class="flex space-x-2">
                    <div class="w-3 h-3 bg-green rounded-full animate-pulse"></div>
                    <div class="w-3 h-3 bg-yellow-400 rounded-full animate-pulse" style="animation-delay: 0.2s;"></div>
                    <div class="w-3 h-3 bg-red-400 rounded-full animate-pulse" style="animation-delay: 0.4s;"></div>
                  </div>
                </div>
                
                <!-- Chart Visualization -->
                <div class="space-y-3">
                  <div class="flex items-end space-x-2 h-20">
                    <div class="bg-green w-4 animate-grow-up" style="height: 60%; animation-delay: 1.5s;"></div>
                    <div class="bg-green w-4 animate-grow-up" style="height: 80%; animation-delay: 1.7s;"></div>
                    <div class="bg-green w-4 animate-grow-up" style="height: 40%; animation-delay: 1.9s;"></div>
                    <div class="bg-green w-4 animate-grow-up" style="height: 90%; animation-delay: 2.1s;"></div>
                    <div class="bg-green w-4 animate-grow-up" style="height: 70%; animation-delay: 2.3s;"></div>
                  </div>
                  
                  <div class="flex justify-between text-xs text-gray-500">
                    <span>Jan</span>
                    <span>Feb</span>
                    <span>Mar</span>
                    <span>Apr</span>
                    <span>May</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Floating Cards -->
          <div class="absolute -top-4 -left-4 bg-white rounded-xl p-4 shadow-lg animate-float" style="animation-delay: 2s;">
            <div class="flex items-center space-x-2">
              <div class="w-3 h-3 bg-green rounded-full"></div>
              <span class="text-sm font-medium">Campaign Active</span>
            </div>
          </div>

          <div class="absolute -bottom-4 -right-4 bg-black text-white rounded-xl p-4 shadow-lg animate-float-delayed" style="animation-delay: 2.5s;">
            <div class="text-center">
              <div class="text-2xl font-bold text-green">+147%</div>
              <div class="text-xs">ROI Increase</div>
            </div>
          </div>

          <div class="absolute top-1/2 -right-8 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl p-3 shadow-lg animate-bounce-gentle" style="animation-delay: 3s;">
            <div class="text-center">
              <div class="text-lg font-bold">AI</div>
              <div class="text-xs">Powered</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
    <div class="flex flex-col items-center text-gray-500">
      <span class="text-xs mb-2">Scroll to explore</span>
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </div>
  </div>
</section>

<style>
  .text-stroke {
    -webkit-text-stroke: 2px black;
    color: transparent;
  }

  .grid-pattern {
    background-image: 
      linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    width: 100%;
    height: 100%;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }

  @keyframes float-delayed {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-15px); }
  }

  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fade-in-left {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes grow-up {
    from {
      height: 0%;
    }
    to {
      height: var(--target-height, 100%);
    }
  }

  @keyframes bounce-gentle {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  .floating-shape {
    animation-duration: 6s;
    animation-iteration-count: infinite;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-float-delayed {
    animation: float-delayed 4s ease-in-out infinite;
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-fade-in-left {
    animation: fade-in-left 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-grow-up {
    animation: grow-up 1s ease-out forwards;
  }

  .animate-bounce-gentle {
    animation: bounce-gentle 2s ease-in-out infinite;
  }
</style>

<script>
  // Counter Animation
  function animateCounters() {
    const counters = document.querySelectorAll('.counter');
    
    counters.forEach(counter => {
      const target = parseInt(counter.getAttribute('data-target') || '0');
      const duration = 2000; // 2 seconds
      const increment = target / (duration / 16); // 60fps
      let current = 0;
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        counter.textContent = Math.floor(current).toString();
      }, 16);
    });
  }

  // Trigger counter animation when hero section is visible
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateCounters();
        observer.unobserve(entry.target);
      }
    });
  });

  const heroSection = document.querySelector('section');
  if (heroSection) {
    observer.observe(heroSection);
  }
</script>